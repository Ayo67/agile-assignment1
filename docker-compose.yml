networks:
  api-network:
    external: true
    name: "mongo-network"

services:
  api:
    image: doconnor/movies-api:1.0
    container_name: movies-api
    environment:
     - MONGODB_URI=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017
     - REDIS_URI=redis://redis
     - ENABLE_WRITING_HANDLERS=false
    ports:
      - '9000:9000'
    networks:
      - api-network
    depends_on:
      - mongodb
      - redis

  mongodb:
    image: mongo:8.0-rc
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    networks:
      - api-network
    volumes:
      - mongodb_data:/data/db

  mongo-express:
    container_name: express
    image: mongo-express:1.0-20-alpine3.19
    restart: always # fixes MongoNetworkError caused by mongodb not being ready when mongo-express starts.
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb
    networks:
      - api-network
    depends_on:
      - mongodb

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - api-network

  mongodb-seed:
    image: mongo:8.0-rc
    container_name: mongodb-seed
    depends_on:
      - mongodb
    networks:
      - api-network
    volumes:
      - ./seeding.json:/seeding.json
    links:
      - mongodb
    command: >
      mongoimport --host mongodb
                  --db tmdb_movies
                  --collection movies
                  --authenticationDatabase admin
                  --username ${MONGODB_USERNAME}
                  --password ${MONGODB_PASSWORD}
                  --drop
                  --jsonArray
                  --file /seeding.json

volumes:
  mongodb_data:



         
